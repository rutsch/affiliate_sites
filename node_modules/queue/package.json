{
  "name": "queue",
  "version": "0.0.2",
  "description": "An async job queue with adjustable concurrency",
  "main": "queue.js",
  "author": {
    "name": "Jesse Tane",
    "email": "jesse.tane@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/jessetane/queue.git"
  },
  "readme": "```\n  ____  _     _____ _     _____\n /  _ \\/ \\ /\\/  __// \\ /\\/  __/\n | / \\|| | |||  \\  | | |||  \\  \n | \\_\\|| \\_/||  /_ | \\_/||  /_ \n \\____\\\\____/\\____\\\\____/\\____\\\n\n```\nAn async job queue with adjustable concurrency.\n\n## Why\n[async](https://github.com/caolan/async#queue)'s queue expects you to have one worker and many jobs. This queue simply expects a list of async functions, which is a bit more flexible - otherwise it's the same idea.\n\n## How\nThe module exports a class named ```Queue```. Pass the desired concurrency to the constructor, or change it later via the ```concurrency``` property. Pass async functions (ones that accept a callback) to an instance's ```push()``` method. Processing begins automatically on ```process.nextTick()```.\n\n## Install\n```npm install queue```\n\n## Properties\n* ```concurrency``` maximum number of jobs that the queue should process concurrently - the default is 1\n\n## Methods\n* ```push(job, cb)``` add a job (and optional callback) to the queue  \n* ```empty()``` remove any remaining jobs in the queue  \n* ```run()``` force run the queue immediately  \n\n## Events\n* ```\"advance\"``` fires after any job finishes  \n* ```\"drain\"``` fires when the queue finishes processing all its jobs  \n\n## Usage\n```javascript\nvar Queue = require(\"../queue\");\n\nvar results = [];\nvar q = new Queue();\n\n// add a drain handler\nq.on(\"drain\", function () {\n  console.log(\"All done:\", results);\n});\n\n// add individual functions\nq.push(function (cb) {\n  results.push(\"one\");\n  cb();\n});\n\n// add arrays of functions\nq.push([\n  function (cb) {\n    results.push(\"two\");\n    cb();\n  },\n  function (cb) {\n    results[2] = \"three\";\n    cb();\n  }\n]);\n```\n",
  "_id": "queue@0.0.2",
  "dist": {
    "shasum": "18f7d59df6bf00df5ad7f084358f2e10b6cdcf54"
  },
  "_from": "queue"
}
